package Planario;

import java.awt.*;

import javax.swing.*;

public class Planaria extends JFrame {

	String ownerName = "";
	public int size = 1;
	ImageIcon skin;
	MyClient ownerIns;
	public float rotate;

	int posX, posY;
	
	JButton btn;

	public Planaria(int size, ImageIcon skin, MyClient ownerIns, int posX, int posY) {
		this.size = size;
		this.skin = skin;
		this.ownerIns = ownerIns;
		this.posX = posX;
		this.posY = posY;
		
		btn = new JButton(skin);
		ownerIns.c.add(btn);
		btn.setBounds(posX, posY, size, size);
		
		PlanariaThread pt = new PlanariaThread();
		pt.start();
	}

	public class PlanariaThread extends Thread{
		public void run() {
			while(true){
				
				
			}
		}		
	}
	
	public void Eat(Planaria target) {
		size += target.size;
		target.Death();
	}

	public void Death() {
		ownerIns.Eaten();

	}

	public void Split() {
		new Planaria(size / 2, skin, ownerIns, posX, posY);
		size /= 2;
		ownerIns.lives++;
	}

	public void Move(float x, float y) {

	}

	public void ReSize() {

	}
	
	void Send(String msg){
		
		ownerIns.out.println(msg);// 送信データをバッファに書き出す
		ownerIns.out.flush();// 送信データをフラッシュ（ネットワーク上にはき出す）する

		repaint();// 画面のオブジェクトを描画し直す
	}
}
